[{"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\index.js":"1","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\App.js":"3","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\ProtectedRoute.js":"4","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\Login.js":"5","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\Register.js":"6","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\Header.js":"7","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\ImagePopup.js":"8","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\AddPlacePopup.js":"9","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\Main.js":"10","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\Footer.js":"11","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\EditAvatarPopup.js":"12","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\EditProfilePopup.js":"13","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\InfoTooltip.js":"14","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\utils\\apiAuth.js":"15","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\contexts\\CurrentUserContext.js":"16","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\utils\\Api.js":"17","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\Card.js":"18","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\PopupWithForm.js":"19"},{"size":426,"mtime":1686079088495,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1683740154846,"results":"22","hashOfConfig":"21"},{"size":7403,"mtime":1690226045515,"results":"23","hashOfConfig":"21"},{"size":265,"mtime":1686257569688,"results":"24","hashOfConfig":"21"},{"size":1402,"mtime":1686257571568,"results":"25","hashOfConfig":"21"},{"size":1750,"mtime":1686257570325,"results":"26","hashOfConfig":"21"},{"size":1118,"mtime":1686257590663,"results":"27","hashOfConfig":"21"},{"size":680,"mtime":1685052020976,"results":"28","hashOfConfig":"21"},{"size":1718,"mtime":1685051836288,"results":"29","hashOfConfig":"21"},{"size":2125,"mtime":1685052023213,"results":"30","hashOfConfig":"21"},{"size":241,"mtime":1683834344821,"results":"31","hashOfConfig":"21"},{"size":1191,"mtime":1685048076785,"results":"32","hashOfConfig":"21"},{"size":2139,"mtime":1685048075964,"results":"33","hashOfConfig":"21"},{"size":789,"mtime":1686257582978,"results":"34","hashOfConfig":"21"},{"size":962,"mtime":1690146690276,"results":"35","hashOfConfig":"21"},{"size":94,"mtime":1685048073437,"results":"36","hashOfConfig":"21"},{"size":2051,"mtime":1690146684459,"results":"37","hashOfConfig":"21"},{"size":1600,"mtime":1685048077974,"results":"38","hashOfConfig":"21"},{"size":944,"mtime":1686255176946,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xk8j4o",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\index.js",[],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\App.js",["98","99"],[],"import React, { useEffect, useState } from \"react\";\nimport \"../index.css\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { Route, Routes, Navigate, useNavigate } from \"react-router-dom\";\nimport { ProtectedRoute } from \"./ProtectedRoute.js\";\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport * as apiAuth from \"../utils/apiAuth\";\nimport InfoTooltip from \"./InfoTooltip\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userData, setUserData] = useState(\"\");\n  const [currentUser, setСurrentUser] = useState({});\n  const [cards, setСards] = useState([]);\n  const [tooltipMessage, setTooltipMessage] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    api\n      .getUserInfo()\n      .then((data) => {\n        setСurrentUser(data);\n      })\n      .catch((err) => {\n        console.log(`Ошибка сервера ${err}`);\n      });\n\n    api\n      .getPlaceCards()\n      .then((data) => {\n        setСards(data);\n      })\n      .catch((err) => {\n        console.log(`Ошибка сервера ${err}`);\n      });\n  }, []);\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    if (!isLiked) {\n      api\n        .putLike(card._id)\n        .then((newCard) => {\n          setСards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch(console.log);\n    } else {\n      api\n        .deleteLike(card._id)\n        .then((newCard) => {\n          setСards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch(console.log);\n    }\n  };\n\n  const handleCardDelete = (card) => {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setСards((state) => state.filter((item) => item._id !== card._id));\n      })\n      .catch(console.log);\n  };\n\n  const handleUpdateUser = (avatar) => {\n    api\n      .patchUserInfo(avatar)\n      .then((data) => {\n        setСurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка сервера ${err}`);\n      });\n  };\n\n  const handleUpdateAvatar = (data) => {\n    console.log(data);\n    api\n      .patchAvatar(data)\n      .then((data) => {\n        setСurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка сервера ${err}`);\n      });\n  };\n\n  const handleAddPlaceSubmit = (data) => {\n    api\n      .postNewCard(data)\n      .then((newCard) => {\n        setСards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка сервера ${err}`);\n      });\n  };\n\n  const handleEditAvatarClick = () => {\n    setAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  function closeAllPopups() {\n    setAddPlacePopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAvatarPopupOpen(false);\n    setSelectedCard(null);\n    setTooltipMessage(null);\n  }\n\n  const handleRegister = ({ password, email }) => {\n    apiAuth\n      .register(password, email)\n      .then(() => {\n        setTooltipMessage({\n          isSuccess: true,\n          text: \"Вы успешно зарегистрировались!\",\n        });\n        navigate(\"/sign-in\");\n      })\n      .catch((err) => {\n        setTooltipMessage({\n          isSuccess: false,\n          text: \"Что-то пошло не так!Попробуйте ещё раз.\",\n        });\n        console.log(`Ошибка сервера ${err}`);\n      });\n  };\n\n  const signOut = () => {\n    localStorage.removeItem(\"jwt\");\n    navigate(\"/sign-in\");\n  };\n\n  const handleLogin = () => {\n    setLoggedIn(true);\n  };\n\n  const tockenCheck = () => {\n    const token = localStorage.getItem(\"jwt\");\n    console.log('token',token);\n\n    if (token) {\n      apiAuth\n        .getContent(token)\n        .then((data) => {\n          setUserData(data.data.email);\n          handleLogin();\n          navigate(\"/\");\n        })\n        .catch((err) => {\n          console.log(`Ошибка сервера ${err}`);\n        });\n    } else {\n      console.log(\"ошибка получения токена\");\n    }\n  };\n\n  useEffect(() => {\n    tockenCheck();\n  }, []);\n\n  const handleAuthorize = ({ password, email }) => {\n    apiAuth\n      .authorize(password, email)\n      .then((data) => {\n        console.log(data);\n        localStorage.setItem(\"jwt\", data.token);\n        navigate(\"/\");\n        handleLogin();\n      })\n\n      .catch((err) => {\n        console.log(`Ошибка сервера ${err}`);\n      });\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header signOut={signOut} userData={userData} />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <ProtectedRoute\n                onEditAvatar={handleEditAvatarClick}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n                cards={cards}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n                loggedIn={loggedIn}\n                element={Main}\n              />\n            }\n          />\n          <Route\n            path=\"/sign-in\"\n            element={\n              <div className=\"loginContainer\">\n                <Login handleAuthorize={handleAuthorize} />\n              </div>\n            }\n          />\n\n          <Route\n            path=\"/sign-up\"\n            element={\n              <div className=\"loginContainer\">\n                <Register handleRegister={handleRegister} />\n              </div>\n            }\n          />\n        </Routes>\n\n        <Footer />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <ImagePopup\n          name=\"img\"\n          card={selectedCard}\n          onClose={closeAllPopups}\n          isOpen={selectedCard}\n        />\n      </div>\n      <InfoTooltip onClose={closeAllPopups} tooltipMessage={tooltipMessage} />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\ProtectedRoute.js",[],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\Login.js",["100","101"],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\Register.js",["102"],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\Header.js",[],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\ImagePopup.js",[],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\AddPlacePopup.js",["103"],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\Main.js",[],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\EditAvatarPopup.js",["104"],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\EditProfilePopup.js",[],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\InfoTooltip.js",["105"],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\utils\\apiAuth.js",[],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\contexts\\CurrentUserContext.js",[],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\utils\\Api.js",["106"],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\Card.js",[],[],"C:\\Users\\Администратор\\Desktop\\react-mesto-api-full-gha\\frontend\\src\\components\\PopupWithForm.js",[],[],{"ruleId":"107","severity":1,"message":"108","line":12,"column":25,"nodeType":"109","messageId":"110","endLine":12,"endColumn":33},{"ruleId":"111","severity":1,"message":"112","line":195,"column":6,"nodeType":"113","endLine":195,"endColumn":8,"suggestions":"114"},{"ruleId":"107","severity":1,"message":"115","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"107","severity":1,"message":"116","line":2,"column":16,"nodeType":"109","messageId":"110","endLine":2,"endColumn":27},{"ruleId":"107","severity":1,"message":"116","line":2,"column":16,"nodeType":"109","messageId":"110","endLine":2,"endColumn":27},{"ruleId":"107","severity":1,"message":"117","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":28},{"ruleId":"107","severity":1,"message":"117","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":28},{"ruleId":"118","severity":1,"message":"119","line":17,"column":9,"nodeType":"120","endLine":20,"endColumn":11},{"ruleId":"107","severity":1,"message":"121","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":19},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tockenCheck'. Either include it or remove the dependency array.","ArrayExpression",["122"],"'Link' is defined but never used.","'useNavigate' is defined but never used.","'CurrentUserContext' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'authorize' is defined but never used.",{"desc":"123","fix":"124"},"Update the dependencies array to be: [tockenCheck]",{"range":"125","text":"126"},[4914,4916],"[tockenCheck]"]