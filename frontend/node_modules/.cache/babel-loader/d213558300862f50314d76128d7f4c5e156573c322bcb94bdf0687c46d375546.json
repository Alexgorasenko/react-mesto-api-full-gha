{"ast":null,"code":"import { authorize } from \"./apiAuth\";\nexport class Api {\n  constructor(options) {\n    this.__checkResponse = res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(\"Error\");\n    };\n    this.url = options.url;\n    this.headers = options.headers;\n  }\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      method: \"GET\",\n      headers: this.headers\n    }).then(this.__checkResponse);\n  }\n  patchUserInfo({\n    name,\n    about\n  }) {\n    return fetch(`${this.url}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this.__checkResponse);\n  }\n  patchAvatar(data) {\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this.__checkResponse);\n  }\n  getPlaceCards() {\n    return fetch(`${this.url}/cards`, {\n      method: \"GET\",\n      headers: this.headers\n    }).then(this.__checkResponse);\n  }\n  postNewCard({\n    name,\n    link\n  }) {\n    return fetch(`${this.url}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this.__checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers\n    }).then(this.__checkResponse);\n  }\n  putLike(cardId) {\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this.headers\n    }).then(this.__checkResponse);\n  }\n  deleteLike(cardId) {\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this.headers\n    }).then(this.__checkResponse);\n  }\n}\nconst token = localStorage.getItem(\"jwt\");\nconst api = new Api({\n  url: \"https://api.alex-gorasenko.mesto.nomoredomains.xyz\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${token}`\n  }\n});\nexport default api;","map":{"version":3,"names":["authorize","Api","constructor","options","__checkResponse","res","ok","json","Promise","reject","url","headers","getUserInfo","fetch","method","then","patchUserInfo","name","about","body","JSON","stringify","patchAvatar","data","avatar","getPlaceCards","postNewCard","link","deleteCard","cardId","putLike","deleteLike","token","localStorage","getItem","api","Authorization"],"sources":["C:/Users/Администратор/Desktop/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["import { authorize } from \"./apiAuth\";\n\nexport class Api {\n  constructor(options) {\n    this.url = options.url;\n    this.headers = options.headers;\n  }\n\n  __checkResponse = (res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(\"Error\");\n  };\n\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      method: \"GET\",\n      headers: this.headers,\n    }).then(this.__checkResponse);\n  }\n\n  patchUserInfo({ name, about }) {\n    return fetch(`${this.url}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then(this.__checkResponse);\n  }\n\n  patchAvatar(data) {\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this.__checkResponse);\n  }\n\n  getPlaceCards() {\n    return fetch(`${this.url}/cards`, {\n      method: \"GET\",\n      headers: this.headers,\n    }).then(this.__checkResponse);\n  }\n\n  postNewCard({ name, link }) {\n    return fetch(`${this.url}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then(this.__checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    }).then(this.__checkResponse);\n  }\n\n  putLike(cardId) {\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this.headers,\n    }).then(this.__checkResponse);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    }).then(this.__checkResponse);\n  }\n}\nconst token = localStorage.getItem(\"jwt\");\n\nconst api = new Api({\n  url: \"https://api.alex-gorasenko.mesto.nomoredomains.xyz\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${token}`\n  }\n});\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}