{"ast":null,"code":"export const BASE_URL = \"https://api.alex-gorasenko.mesto.nomoredomains.xyz\";\nconst checkResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(\"Error\");\n};\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkResponse);\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkResponse);\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","getContent","token","Authorization"],"sources":["C:/Users/Администратор/Desktop/react-mesto-api-full-gha/frontend/src/utils/apiAuth.js"],"sourcesContent":["export const BASE_URL = \"https://api.alex-gorasenko.mesto.nomoredomains.xyz\";\r\n\r\n\r\nconst checkResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(\"Error\");\r\n};\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ password, email }),\r\n  }).then(checkResponse)\r\n  ;\r\n};\r\n\r\nexport const authorize = (password, email) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ password, email }),\r\n  }).then(checkResponse)\r\n};\r\n\r\nexport const getContent = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }).then(checkResponse)\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,oDAAoD;AAG5E,MAAMC,aAAa,GAAIC,GAAG,IAAK;EAC7B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAC,OAAO,CAAC;AAChC,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEV,QAAS,SAAQ,EAAE;IACjCW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAACf,aAAa,CAAC;AAExB,CAAC;AAED,OAAO,MAAMgB,SAAS,GAAGA,CAACT,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEV,QAAS,SAAQ,EAAE;IACjCW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAACf,aAAa,CAAC;AACxB,CAAC;AAED,OAAO,MAAMiB,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOT,KAAK,CAAE,GAAEV,QAAS,WAAU,EAAE;IACnCW,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCQ,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC,CAACH,IAAI,CAACf,aAAa,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}